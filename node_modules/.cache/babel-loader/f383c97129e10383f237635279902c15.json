{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nutzer\\\\Desktop\\\\react\\\\linkedin-clone\\\\src\\\\components\\\\PostModal.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport ReactPlayer from \"react-player\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostModal = props => {\n  _s();\n\n  const [editorText, setEditorText] = useState(\"\");\n  const [shareImage, setShareImage] = useState(\"\");\n  const [videoLink, setVideoLink] = useState(\"\");\n  const [assetArea, setAssetArea] = useState(\"\");\n\n  const handleChange = e => {\n    const image = e.target.files[0];\n\n    if (image === \"\" || image === undefined) {\n      alert(`not a image, the file is a ${typeof image}`);\n      return;\n    } // if dont get an error then the setShareImage updates the shareImage\n\n\n    setShareImage(image);\n  };\n\n  const switchAssetArea = area => {\n    setShareImage(\"\");\n    setVideoLink(\"\");\n    setAssetArea(area);\n  };\n\n  const reset = e => {\n    // reset all of the states inside\n    setEditorText(\"\");\n    setShareImage(\"\");\n    setVideoLink(\"\");\n    setAssetArea(\"\");\n    props.handleClick(e);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.showModal === \"open\" && /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Content, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Create a post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: event => reset(event),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/images/plus-icon.svg\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SharedContent, {\n          children: [/*#__PURE__*/_jsxDEV(UserInfo, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/images/user.svg\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Editor, {\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: editorText // to save the User input\n              ,\n              onChange: e => setEditorText(e.target.value) //set whatever the value is and set it to the setEditorText\n              ,\n              placeholder: \"What do you want to talk about?\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), assetArea === \"image\" ? /*#__PURE__*/_jsxDEV(UploadImage, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \"image/gif, image/jpeg, image/png\",\n                name: \"image\",\n                id: \"file\",\n                style: {\n                  display: \"none\"\n                },\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"file\",\n                  children: \"Select an image to share\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this), shareImage && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: URL.createObjectURL(shareImage),\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this) : assetArea === \"media\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Please input a video link\",\n                value: videoLink,\n                onChange: e => setVideoLink(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 23\n              }, this), videoLink && /*#__PURE__*/_jsxDEV(ReactPlayer, {\n                width: \"100%\",\n                url: videoLink\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SharedCreation, {\n          children: [/*#__PURE__*/_jsxDEV(AttachAssets, {\n            children: [/*#__PURE__*/_jsxDEV(AssetButton, {\n              onClick: () => switchAssetArea(\"image\"),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/images/share-icon.png\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(AssetButton, {\n              onClick: () => switchAssetArea(\"media\"),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/images/video.png\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ShareComment, {\n            children: /*#__PURE__*/_jsxDEV(AssetButton, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/images/comments-icon.png\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this), \"Anyone\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PostButton, {\n            disabled: !editorText ? true : false // if the text is empty disable thee button\n            ,\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(PostModal, \"8EweG4tKbO73or+QyTy6Gj/6WBI=\");\n\n_c = PostModal;\nconst Container = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 9999;\n  color: black;\n  background-color: rgba(0, 0, 0, 0.8);\n  animation: fadeIn 1.3s;\n`;\n_c2 = Container;\nconst Content = styled.div`\n  width: 100%;\n  max-width: 552px;\n  background-color: white;\n  max-height: 90%;\n  overflow: initial;\n  border-radius: 5px;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  top: 32px;\n  margin: 0 auto;\n`;\n_c3 = Content;\nconst Header = styled.div`\n  display: block;\n  padding: 16px 20px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.15);\n  font-size: 16px;\n  line-height: 1.5;\n  color: rgba(0, 0, 0, 0.6);\n  font-weight: 400;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  button {\n    height: 40px;\n    width: 40px;\n    min-width: auto;\n    color: white;\n    display: flex;\n    align-items: center;\n    background-color: lightblue;\n    border: none;\n    border-radius: 50%;\n    svg,\n    img {\n      pointer-events: none;\n    }\n    img {\n      transform: rotate(315deg);\n      width: 40px;\n    }\n    &:hover {\n      opacity: 0.9;\n      transition: 960ms;\n      transform: rotate(358deg);\n      cursor: pointer;\n    }\n  }\n`;\n_c4 = Header;\nconst SharedContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  overflow-y: auto;\n  vertical-align: baseline;\n  background: transparent;\n  padding: 8px 12px;\n`;\n_c5 = SharedContent;\nconst UserInfo = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 12px 24px;\n  svg,\n  img {\n    width: 48px;\n    height: 48px;\n    background-clip: content-box;\n    border: 2px solid transparent;\n    border-radius: 50%;\n  }\n  span {\n    font-weight: 600;\n    font-size: 16px;\n    line-height: 1.5;\n    margin-left: 5px;\n  }\n`;\n_c6 = UserInfo;\nconst SharedCreation = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 12px 24px 12px 16px;\n`;\n_c7 = SharedCreation;\nconst AssetButton = styled.button`\n  display: flex;\n  align-items: center;\n  height: 40px;\n  min-width: auto;\n  color: rgba(0, 0, 0, 0.5);\n  img {\n    width: 25px;\n  }\n`;\n_c8 = AssetButton;\nconst AttachAssets = styled.div`\n  align-items: center;\n  display: flex;\n  padding-right: 8px;\n  ${AssetButton} {\n    width: 40px;\n  }\n`;\n_c9 = AttachAssets;\nconst ShareComment = styled.div`\n  padding: 8px;\n  margin-right: auto;\n  border-left: 1px solid rgba(0, 0, 0, 0.15);\n  ${AssetButton} {\n    img {\n      margin-right: 5px;\n    }\n  }\n`;\n_c10 = ShareComment;\nconst PostButton = styled.button`\n  min-width: 60px;\n  border-radius: 20px;\n  padding-left: 16px;\n  padding-right: 16px;\n  background: ${props => props.disabled ? \"rgba(0,0,0,0.8)\" : \"#0a66c2\"};\n  color: ${props => props.disabled ? \"rgba(1, 1, 1, 0.2)\" : \"white\"};\n  &:hover {\n    background: ${props => props.disabled ? \"rgba(0,0,0,0.08)\" : \"#004182\"};\n  }\n`;\n_c11 = PostButton;\nconst Editor = styled.div`\n  padding: 12px 24px;\n  textarea {\n    width: 100%;\n    min-height: 100px;\n    resize: none; // without this the inputbox of textarea ist chaneable\n  }\n\n  input {\n    width: 100%;\n    height: 35px;\n    font-size: 16px;\n    margin-bottom: 20px;\n  }\n`;\n_c12 = Editor;\nconst UploadImage = styled.div`\n  text-align: center;\n  img {\n    width: 100%;\n  }\n`;\n_c13 = UploadImage;\n\nconst mapStateToProps = state => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostModal);\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n\n$RefreshReg$(_c, \"PostModal\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"Header\");\n$RefreshReg$(_c5, \"SharedContent\");\n$RefreshReg$(_c6, \"UserInfo\");\n$RefreshReg$(_c7, \"SharedCreation\");\n$RefreshReg$(_c8, \"AssetButton\");\n$RefreshReg$(_c9, \"AttachAssets\");\n$RefreshReg$(_c10, \"ShareComment\");\n$RefreshReg$(_c11, \"PostButton\");\n$RefreshReg$(_c12, \"Editor\");\n$RefreshReg$(_c13, \"UploadImage\");","map":{"version":3,"sources":["C:/Users/Nutzer/Desktop/react/linkedin-clone/src/components/PostModal.js"],"names":["useState","styled","ReactPlayer","connect","PostModal","props","editorText","setEditorText","shareImage","setShareImage","videoLink","setVideoLink","assetArea","setAssetArea","handleChange","e","image","target","files","undefined","alert","switchAssetArea","area","reset","handleClick","showModal","event","value","display","URL","createObjectURL","Container","div","Content","Header","SharedContent","UserInfo","SharedCreation","AssetButton","button","AttachAssets","ShareComment","PostButton","disabled","Editor","UploadImage","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PostModal = (props) => {\r\n  const [editorText, setEditorText] = useState(\"\");\r\n  const [shareImage, setShareImage] = useState(\"\");\r\n  const [videoLink, setVideoLink] = useState(\"\");\r\n  const [assetArea, setAssetArea] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const image = e.target.files[0];\r\n\r\n    if (image === \"\" || image === undefined) {\r\n      alert(`not a image, the file is a ${typeof image}`);\r\n      return;\r\n    }\r\n    // if dont get an error then the setShareImage updates the shareImage\r\n    setShareImage(image);\r\n  };\r\n\r\n  const switchAssetArea = (area) => {\r\n    setShareImage(\"\");\r\n    setVideoLink(\"\");\r\n    setAssetArea(area);\r\n  };\r\n\r\n  const reset = (e) => {\r\n    // reset all of the states inside\r\n    setEditorText(\"\");\r\n    setShareImage(\"\");\r\n    setVideoLink(\"\");\r\n    setAssetArea(\"\");\r\n    props.handleClick(e);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.showModal === \"open\" && (\r\n        <Container>\r\n          <Content>\r\n            <Header>\r\n              <h2>Create a post</h2>\r\n              <button onClick={(event) => reset(event)}>\r\n                <img src=\"/images/plus-icon.svg\" alt=\"\" />\r\n              </button>\r\n            </Header>\r\n            <SharedContent>\r\n              <UserInfo>\r\n                <img src=\"/images/user.svg\" alt=\"\" />\r\n                <span>Name</span>\r\n              </UserInfo>\r\n              <Editor>\r\n                <textarea\r\n                  value={editorText} // to save the User input\r\n                  onChange={(e) => setEditorText(e.target.value)} //set whatever the value is and set it to the setEditorText\r\n                  placeholder=\"What do you want to talk about?\"\r\n                  autoFocus={true}\r\n                />\r\n                {assetArea === \"image\" ? (\r\n                  <UploadImage>\r\n                    <input\r\n                      type=\"file\"\r\n                      accept=\"image/gif, image/jpeg, image/png\"\r\n                      name=\"image\"\r\n                      id=\"file\"\r\n                      style={{ display: \"none\" }}\r\n                      onChange={handleChange}\r\n                    />\r\n                    <p>\r\n                      <label htmlFor=\"file\">Select an image to share</label>\r\n                    </p>\r\n                    {shareImage && (\r\n                      <img src={URL.createObjectURL(shareImage)} alt=\"\" />\r\n                    )}\r\n                  </UploadImage>\r\n                ) : (\r\n                  assetArea === \"media\" && (\r\n                    <>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Please input a video link\"\r\n                        value={videoLink}\r\n                        onChange={(e) => setVideoLink(e.target.value)}\r\n                      />\r\n                      {videoLink && (\r\n                        <ReactPlayer width={\"100%\"} url={videoLink} />\r\n                      )}\r\n                    </>\r\n                  )\r\n                )}\r\n              </Editor>\r\n            </SharedContent>\r\n            <SharedCreation>\r\n              <AttachAssets>\r\n                <AssetButton onClick={() => switchAssetArea(\"image\")}>\r\n                  <img src=\"/images/share-icon.png\" alt=\"\" />\r\n                </AssetButton>\r\n                <AssetButton onClick={() => switchAssetArea(\"media\")}>\r\n                  <img src=\"/images/video.png\" alt=\"\" />\r\n                </AssetButton>\r\n              </AttachAssets>\r\n\r\n              <ShareComment>\r\n                <AssetButton>\r\n                  <img src=\"/images/comments-icon.png\" alt=\"\" />\r\n                  Anyone\r\n                </AssetButton>\r\n              </ShareComment>\r\n              <PostButton\r\n                disabled={!editorText ? true : false} // if the text is empty disable thee button\r\n              >\r\n                Post\r\n              </PostButton>\r\n            </SharedCreation>\r\n          </Content>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  z-index: 9999;\r\n  color: black;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  animation: fadeIn 1.3s;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  width: 100%;\r\n  max-width: 552px;\r\n  background-color: white;\r\n  max-height: 90%;\r\n  overflow: initial;\r\n  border-radius: 5px;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  top: 32px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  display: block;\r\n  padding: 16px 20px;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.15);\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n  color: rgba(0, 0, 0, 0.6);\r\n  font-weight: 400;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  button {\r\n    height: 40px;\r\n    width: 40px;\r\n    min-width: auto;\r\n    color: white;\r\n    display: flex;\r\n    align-items: center;\r\n    background-color: lightblue;\r\n    border: none;\r\n    border-radius: 50%;\r\n    svg,\r\n    img {\r\n      pointer-events: none;\r\n    }\r\n    img {\r\n      transform: rotate(315deg);\r\n      width: 40px;\r\n    }\r\n    &:hover {\r\n      opacity: 0.9;\r\n      transition: 960ms;\r\n      transform: rotate(358deg);\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nconst SharedContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-grow: 1;\r\n  overflow-y: auto;\r\n  vertical-align: baseline;\r\n  background: transparent;\r\n  padding: 8px 12px;\r\n`;\r\n\r\nconst UserInfo = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 12px 24px;\r\n  svg,\r\n  img {\r\n    width: 48px;\r\n    height: 48px;\r\n    background-clip: content-box;\r\n    border: 2px solid transparent;\r\n    border-radius: 50%;\r\n  }\r\n  span {\r\n    font-weight: 600;\r\n    font-size: 16px;\r\n    line-height: 1.5;\r\n    margin-left: 5px;\r\n  }\r\n`;\r\n\r\nconst SharedCreation = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 12px 24px 12px 16px;\r\n`;\r\n\r\nconst AssetButton = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 40px;\r\n  min-width: auto;\r\n  color: rgba(0, 0, 0, 0.5);\r\n  img {\r\n    width: 25px;\r\n  }\r\n`;\r\n\r\nconst AttachAssets = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  padding-right: 8px;\r\n  ${AssetButton} {\r\n    width: 40px;\r\n  }\r\n`;\r\n\r\nconst ShareComment = styled.div`\r\n  padding: 8px;\r\n  margin-right: auto;\r\n  border-left: 1px solid rgba(0, 0, 0, 0.15);\r\n  ${AssetButton} {\r\n    img {\r\n      margin-right: 5px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PostButton = styled.button`\r\n  min-width: 60px;\r\n  border-radius: 20px;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n  background: ${(props) => (props.disabled ? \"rgba(0,0,0,0.8)\" : \"#0a66c2\")};\r\n  color: ${(props) => (props.disabled ? \"rgba(1, 1, 1, 0.2)\" : \"white\")};\r\n  &:hover {\r\n    background: ${(props) => (props.disabled ? \"rgba(0,0,0,0.08)\" : \"#004182\")};\r\n  }\r\n`;\r\n\r\nconst Editor = styled.div`\r\n  padding: 12px 24px;\r\n  textarea {\r\n    width: 100%;\r\n    min-height: 100px;\r\n    resize: none; // without this the inputbox of textarea ist chaneable\r\n  }\r\n\r\n  input {\r\n    width: 100%;\r\n    height: 35px;\r\n    font-size: 16px;\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nconst UploadImage = styled.div`\r\n  text-align: center;\r\n  img {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostModal);\r\n"]},"metadata":{},"sourceType":"module"}