{"ast":null,"code":"import _objectSpread from\"C:/Users/Nutzer/Desktop/react/linkedin-clone/node_modules/@babel/runtime/helpers/esm/objectSpread2\";/* import { bindActionCreators } from \"redux\"; */import{SET_USER}from\"../actions/actionType\";var INITIAL_STATE={user:null};var userReducer=function userReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:INITIAL_STATE;var action=arguments.length>1?arguments[1]:undefined;// reducers updates the state in this case userReducer is the state updater\nswitch(action.type){case SET_USER:return _objectSpread(_objectSpread({},state),{},{//the case is that SET_USER takes the existing state\nuser:action.user// and it adds the new user to it\n});default:return state;// if the state doesn't change, it just returns the default state of whatever it was before the user was there\n}};// redux is immutable\n// every state is a new created state\nexport default userReducer;","map":{"version":3,"sources":["C:/Users/Nutzer/Desktop/react/linkedin-clone/src/reducers/userReducer.js"],"names":["SET_USER","INITIAL_STATE","user","userReducer","state","action","type"],"mappings":"8HAAA,iDACA,OAASA,QAAT,KAAyB,uBAAzB,CAEA,GAAMC,CAAAA,aAAa,CAAG,CACpBC,IAAI,CAAE,IADc,CAAtB,CAIA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAmC,IAAlCC,CAAAA,KAAkC,2DAA1BH,aAA0B,IAAXI,CAAAA,MAAW,2CACrD;AACA,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKN,CAAAA,QAAL,CACE,sCACKI,KADL,MACY;AACVF,IAAI,CAAEG,MAAM,CAACH,IAAM;AAFrB,GAIF,QACE,MAAOE,CAAAA,KAAP,CAAc;AAPlB,CASD,CAXD,CAaA;AACA;AAEA,cAAeD,CAAAA,WAAf","sourcesContent":["/* import { bindActionCreators } from \"redux\"; */\r\nimport { SET_USER } from \"../actions/actionType\";\r\n\r\nconst INITIAL_STATE = {\r\n  user: null,\r\n};\r\n\r\nconst userReducer = (state = INITIAL_STATE, action) => {\r\n  // reducers updates the state in this case userReducer is the state updater\r\n  switch (action.type) {\r\n    case SET_USER:\r\n      return {\r\n        ...state, //the case is that SET_USER takes the existing state\r\n        user: action.user, // and it adds the new user to it\r\n      };\r\n    default:\r\n      return state; // if the state doesn't change, it just returns the default state of whatever it was before the user was there\r\n  }\r\n};\r\n\r\n// redux is immutable\r\n// every state is a new created state\r\n\r\nexport default userReducer;\r\n"]},"metadata":{},"sourceType":"module"}