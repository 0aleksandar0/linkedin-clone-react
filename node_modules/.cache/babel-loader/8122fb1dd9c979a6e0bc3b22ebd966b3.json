{"ast":null,"code":"/* import { bindActionCreators } from \"redux\"; */\nimport { SET_USER } from \"../actions/actionType\";\nconst INITIAL_STATE = {\n  user: null\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  // reducers updates the state in this case userReducer is the state updater\n  switch (action.type) {\n    case SET_USER:\n      return { ...state,\n        //the case is that SET_USER takes the existing state\n        user: action.user // and it adds the new user to it\n\n      };\n\n    default:\n      return state;\n    // if the state doesn't change, it just returns the default state of whatever it was before the user was there\n  }\n}; // redux is immutable\n// every state is a new created state\n\n\nexport default userReducer;","map":{"version":3,"sources":["C:/Users/Nutzer/Desktop/react/linkedin-clone/src/reducers/userReducer.js"],"names":["SET_USER","INITIAL_STATE","user","userReducer","state","action","type"],"mappings":"AAAA;AACA,SAASA,QAAT,QAAyB,uBAAzB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE;AADc,CAAtB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,aAAT,EAAwBI,MAAxB,KAAmC;AACrD;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,QAAL;AACE,aAAO,EACL,GAAGI,KADE;AACK;AACVF,QAAAA,IAAI,EAAEG,MAAM,CAACH,IAFR,CAEc;;AAFd,OAAP;;AAIF;AACE,aAAOE,KAAP;AAAc;AAPlB;AASD,CAXD,C,CAaA;AACA;;;AAEA,eAAeD,WAAf","sourcesContent":["/* import { bindActionCreators } from \"redux\"; */\r\nimport { SET_USER } from \"../actions/actionType\";\r\n\r\nconst INITIAL_STATE = {\r\n  user: null,\r\n};\r\n\r\nconst userReducer = (state = INITIAL_STATE, action) => {\r\n  // reducers updates the state in this case userReducer is the state updater\r\n  switch (action.type) {\r\n    case SET_USER:\r\n      return {\r\n        ...state, //the case is that SET_USER takes the existing state\r\n        user: action.user, // and it adds the new user to it\r\n      };\r\n    default:\r\n      return state; // if the state doesn't change, it just returns the default state of whatever it was before the user was there\r\n  }\r\n};\r\n\r\n// redux is immutable\r\n// every state is a new created state\r\n\r\nexport default userReducer;\r\n"]},"metadata":{},"sourceType":"module"}