{"ast":null,"code":"import { auth, provider } from \"../firebase\";\nimport { SET_USER } from \"./actionType\";\nexport const setUser = payload => ({\n  //setUser takes a payload\n  type: SET_USER,\n  user: payload // is setted to whatever the payload is\n\n});\nexport function signInAPI() {\n  return dispatch => {\n    auth.signInWithPopup(provider).then(payload => {\n      dispatch(setUser(payload.user)); //payload is all of the user details -> dispatched to SET_USER\n    }).catch(error => alert(error.message));\n  };\n}\nexport function getUserAuth() {\n  return dispatch => {\n    auth.onAuthStateChanged(async user => {\n      if (user) {\n        dispatch(setUser(user));\n      }\n    });\n  };\n}\nexport function signOutAPI() {\n  return dispatch => {\n    auth.signOut().then(() => {\n      dispatch(setUser(null));\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/Nutzer/Desktop/react/linkedin-clone/src/actions/index.js"],"names":["auth","provider","SET_USER","setUser","payload","type","user","signInAPI","dispatch","signInWithPopup","then","catch","error","alert","message","getUserAuth","onAuthStateChanged","signOutAPI","signOut"],"mappings":"AAAA,SAASA,IAAT,EAAeC,QAAf,QAA+B,aAA/B;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA,OAAO,MAAMC,OAAO,GAAIC,OAAD,KAAc;AACnC;AACAC,EAAAA,IAAI,EAAEH,QAF6B;AAGnCI,EAAAA,IAAI,EAAEF,OAH6B,CAGpB;;AAHoB,CAAd,CAAhB;AAMP,OAAO,SAASG,SAAT,GAAqB;AAC1B,SAAQC,QAAD,IAAc;AACnBR,IAAAA,IAAI,CACDS,eADH,CACmBR,QADnB,EAEGS,IAFH,CAESN,OAAD,IAAa;AACjBI,MAAAA,QAAQ,CAACL,OAAO,CAACC,OAAO,CAACE,IAAT,CAAR,CAAR,CADiB,CACgB;AAClC,KAJH,EAKGK,KALH,CAKUC,KAAD,IAAWC,KAAK,CAACD,KAAK,CAACE,OAAP,CALzB;AAMD,GAPD;AAQD;AAED,OAAO,SAASC,WAAT,GAAuB;AAC5B,SAAQP,QAAD,IAAc;AACnBR,IAAAA,IAAI,CAACgB,kBAAL,CAAwB,MAAOV,IAAP,IAAgB;AACtC,UAAIA,IAAJ,EAAU;AACRE,QAAAA,QAAQ,CAACL,OAAO,CAACG,IAAD,CAAR,CAAR;AACD;AACF,KAJD;AAKD,GAND;AAOD;AAED,OAAO,SAASW,UAAT,GAAsB;AAC3B,SAAQT,QAAD,IAAc;AACnBR,IAAAA,IAAI,CAACkB,OAAL,GAAeR,IAAf,CAAoB,MAAM;AACxBF,MAAAA,QAAQ,CAACL,OAAO,CAAC,IAAD,CAAR,CAAR;AACD,KAFD;AAGD,GAJD;AAKD","sourcesContent":["import { auth, provider } from \"../firebase\";\r\nimport { SET_USER } from \"./actionType\";\r\n\r\nexport const setUser = (payload) => ({\r\n  //setUser takes a payload\r\n  type: SET_USER,\r\n  user: payload, // is setted to whatever the payload is\r\n});\r\n\r\nexport function signInAPI() {\r\n  return (dispatch) => {\r\n    auth\r\n      .signInWithPopup(provider)\r\n      .then((payload) => {\r\n        dispatch(setUser(payload.user)); //payload is all of the user details -> dispatched to SET_USER\r\n      })\r\n      .catch((error) => alert(error.message));\r\n  };\r\n}\r\n\r\nexport function getUserAuth() {\r\n  return (dispatch) => {\r\n    auth.onAuthStateChanged(async (user) => {\r\n      if (user) {\r\n        dispatch(setUser(user));\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nexport function signOutAPI() {\r\n  return (dispatch) => {\r\n    auth.signOut().then(() => {\r\n      dispatch(setUser(null));\r\n    });\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}